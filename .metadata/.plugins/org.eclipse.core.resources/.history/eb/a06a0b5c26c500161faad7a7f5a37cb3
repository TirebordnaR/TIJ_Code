package newcomponent;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.Delayed;
import static java.util.concurrent.TimeUnit.*;

public class DelayQueueDemo {

}

class DelayedTask implements Runnable, Delayed {

	private static int count = 0;
	private final int id = count++;

	private final int delta; // 距离任务发生的时间
	private final long triggerTime; // 任务触发的时间

	protected static List<DelayedTask> sequenceTasks = new ArrayList<>();

	// 参数是距离要发生的时间有多少Ms
	public DelayedTask(int delayInMs) {
		delta = delayInMs;
		triggerTime = System.nanoTime() + NANOSECONDS.convert( delayInMs, MILLISECONDS );
		sequenceTasks.add( this );
	}

	@Override
	public void run() {
		System.out.println( this );
	}

	public int compareTo(Delayed thatT){
		DelayedTask that = (DelayedTask) thatT;
		if(this.triggerTime < that.triggerTime)
			return -1;
	}
	
	@Override
	public String toString() {
		return "Task " + id + " 创建任务到触发任务的时间间隔(ms)：" + delta;
	}
}

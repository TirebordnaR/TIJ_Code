package basic;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class DaemonFromFactory implements Runnable {
	@Override
	public void run() {
		try {
			while( true ) {
				TimeUnit.SECONDS.sleep( 1 );
				System.out.println( Thread.currentThread() );
			}
		} catch( InterruptedException e ) {
			System.out.println( "Interrupted..." );
		}
	}

	public static void main(String[] args) throws InterruptedException {

		ExecutorService exec = Executors.newCachedThreadPool( new DaemonThreadFactory() );
		for( int i = 0; i < 4; i++ ) {
			exec.execute( new DaemonFromFactory() );
		}

		System.out.println( "All daemons started" );
		TimeUnit.SECONDS.sleep( 1 );
		TimeUnit.MILLISECONDS.sleep( 200 );
		System.out.println( "Main Thread is going die..." );
	}
}
